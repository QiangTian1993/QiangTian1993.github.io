(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{588:function(s,t,e){"use strict";e.r(t);var a=e(4),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"正则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[s._v("#")]),s._v(" 正则")]),s._v(" "),e("h2",{attrs:{id:"正则的实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则的实例方法"}},[s._v("#")]),s._v(" 正则的实例方法")]),s._v(" "),e("h3",{attrs:{id:"regexp-prototype-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-prototype-test"}},[s._v("#")]),s._v(" RegExp.prototype.test()")]),s._v(" "),e("blockquote",[e("p",[s._v("正则实例对象的 "),e("code",[s._v("test")]),s._v(" 方法返回一个布尔值，表示当前模式是否能匹配参数字符串。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("W")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你好世界'")]),s._v("\n\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"regexp-prototype-exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-prototype-exec"}},[s._v("#")]),s._v(" RegExp.prototype.exec()")]),s._v(" "),e("blockquote",[e("p",[s._v("正则实例对象的 "),e("code",[s._v("exec")]),s._v(" 方法，用来返回匹配结果。如果发现匹配，就返回一个数组，成员是匹配成功的子字符串，否则返回 null。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("o")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'你好世界'")]),s._v("\n\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//  ["o", index: 4, input: "Hello World", groups: undefined]')]),s._v("\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ["o", index: 7, input: "Hello World", groups: undefined]')]),s._v("\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\nreg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("code",[s._v("exec")]),s._v(" 能连续匹配，每次会重上一次的匹配的索引开始匹配，如果没有匹配到就返回 "),e("code",[s._v("null")])]),s._v(" "),e("h2",{attrs:{id:"字符串的实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串的实例方法"}},[s._v("#")]),s._v(" 字符串的实例方法")]),s._v(" "),e("h3",{attrs:{id:"string-prototype-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-match"}},[s._v("#")]),s._v(" String.prototype.match()")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("match")]),s._v(" 方法返回一个数组，是所有匹配的所有字符串。如果没有匹配的就返回 "),e("code",[s._v("null")])])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("\n\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("o")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['o','o']")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"string-prototype-search"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-search"}},[s._v("#")]),s._v(" String.prototype.search()")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("search")]),s._v(" 方法返回最后一个匹配的的索引, 如果没有匹配到就会返回 "),e("code",[s._v("-1")])])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("\n\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("o")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("f")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"string-prototype-replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-replace"}},[s._v("#")]),s._v(" String.prototype.replace()")]),s._v(" "),e("blockquote",[e("p",[s._v("字符串对象的 "),e("code",[s._v("replace")]),s._v(" 方法可以替换匹配的值。它接受两个参数，第一个是正则表达式，表示搜索模式，第二个是替换的内容。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("\n\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("o")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'O'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'HellO WOrld'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"string-prototype-split"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-split"}},[s._v("#")]),s._v(" String.prototype.split()")]),s._v(" "),e("blockquote",[e("p",[s._v("字符串对象的 split 方法按照正则规则分割字符串，返回一个由分割后的各个部分组成的数组。")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a , b, c ,d'")]),s._v("\n\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v(" , ")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [a, b, c, d]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("code",[s._v("/d/")]),s._v(" 会在 'Hello World' 中匹配 'd'")]),s._v(" "),e("p",[e("code",[s._v("/o/g")]),s._v(" 会在 'Hello World' 中匹配所有的 'o'")]),s._v(" "),e("p",[e("code",[s._v("/^H/")]),s._v("会在 'Hello World HHHHH' 匹配以 'H' 开头的")]),s._v(" "),e("p",[e("code",[s._v("/H\\$/")]),s._v(" 会在 'Hello World HHHHH' 匹配以 'H' 结尾的")]),s._v(" "),e("p",[e("code",[s._v("/llo/")]),s._v(" 会在 'Hello World' 匹配 'llo' 或 ’lo‘")]),s._v(" "),e("p",[e("code",[s._v("/ol?/")]),s._v(" 不在乎顺序，在 'Hello World'中匹配 'lo' 或 'ol'")]),s._v(" "),e("p",[e("code",[s._v("/A|B/")]),s._v("匹配 A 或者 B\n"),e("code",[s._v("\\s")]),s._v(" 空格\n"),e("code",[s._v("\\w")]),s._v(" 获取首字母")]),s._v(" "),e("p",[e("code",[s._v("/H(\\w)/")]),s._v(" 匹配 H 和其后面的一个字符")]),s._v(" "),e("p",[e("code",[s._v("/([^\\?]+)\\$/")]),s._v(" 匹配 ？ 后面的所有内容")]),s._v(" "),e("p",[e("code",[s._v("/H(/S)/")]),s._v(" 匹配 H 包括 H 后面的所有内容")]),s._v(" "),e("p",[e("code",[s._v("/^H.d\\$/")]),s._v(" 匹配已 H 开头并以 d 结尾")]),s._v(" "),e("p",[s._v("i 忽略大小写\ng 匹配所有符合条件的")]),s._v(" "),e("p",[s._v("/^[A-Za-z0-9\\u4e00-\\u9fa5]+$ // 不允许输入空格等特殊符号")]),s._v(" "),e("p",[s._v("/[^*][?][^*][:] ||||&&/ 匹配三元表达式或逻辑表达式")]),s._v(" "),e("p",[s._v("/^[0-9A-Z]+$/ 只允许输入大写字母和数字")]),s._v(" "),e("p",[s._v("s括 A 和 B")])])}),[],!1,null,null,null);t.default=r.exports}}]);