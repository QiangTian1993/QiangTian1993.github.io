(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{532:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[t._v("#")]),t._v(" 垃圾回收")]),t._v(" "),a("p",[t._v("在 javascript 当一个对象是不可达的那么它就会被垃圾回收")]),t._v(" "),a("p",[t._v("什么是可达对象呢？")]),t._v(" "),a("ul",[a("li",[t._v("对象是可被访问的")]),t._v(" "),a("li",[t._v("在一个作用域链上，只要通过全局可以有路径查找到的对象都是可达对象")])]),t._v(" "),a("h2",{attrs:{id:"垃圾回收机制（gc）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制（gc）"}},[t._v("#")]),t._v(" 垃圾回收机制（GC）")]),t._v(" "),a("p",[t._v("常见垃圾回收机制：")]),t._v(" "),a("ul",[a("li",[t._v("引用计数")]),t._v(" "),a("li",[t._v("标记清除")]),t._v(" "),a("li",[t._v("标记整理")]),t._v(" "),a("li",[t._v("分代回收")])]),t._v(" "),a("h2",{attrs:{id:"引用计数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用计数"}},[t._v("#")]),t._v(" 引用计数")]),t._v(" "),a("p",[t._v("每一个对象都会被分配一个引用数，它每一次被引用时这个引用数都会加 1，减少引用时就会减 1， 当引用数为 0 时就会被垃圾回收")]),t._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("发现垃圾立即回收")]),t._v(" "),a("li",[t._v("最大限度上减少程序暂停（因为当引用数为 0 时就会被垃圾回收，从而释放内存，这样就会极大程度上减少了内存爆满的概率）")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ul",[a("li",[t._v("无法回收循环引用的对象")]),t._v(" "),a("li",[t._v("时间开销大（每次都要修改引用数）")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tobj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("这里在全局虽然不能访问到 obj 和 obj1 但是 obj 与 obj1 存在循环引用，所以引用计数算法不能回收这两个对象")]),t._v(" "),a("h2",{attrs:{id:"标记清除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记清除"}},[t._v("#")]),t._v(" 标记清除")]),t._v(" "),a("p",[t._v("先遍历内存中所有的对象，将活动对象进行标记（与可达对象同理），然后再次遍历将未标记的对象进行回收")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("可以回收循环引用的对象")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ul",[a("li",[t._v("容易产生碎片化空间，浪费空间")]),t._v(" "),a("li",[t._v("不能够立即回收垃圾对象")])]),t._v(" "),a("h2",{attrs:{id:"标记整理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标记整理"}},[t._v("#")]),t._v(" 标记整理")]),t._v(" "),a("p",[t._v("标记整理与标记清除类似，它解决了标记清除容易产生碎片化空间的缺点。它在标记的时候会进行内存地址整理的操作，将未标记的对象形成一个连续的内存空间")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("可以回收循环引用的对象")]),t._v(" "),a("li",[t._v("不会产生碎片化空间")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ul",[a("li",[t._v("不能够立即回收垃圾对象")])])])}),[],!1,null,null,null);s.default=r.exports}}]);