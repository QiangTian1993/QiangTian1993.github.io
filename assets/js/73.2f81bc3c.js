(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{601:function(t,e,s){"use strict";s.r(e);var v=s(4),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"静态类型与动态类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态类型与动态类型"}},[t._v("#")]),t._v(" 静态类型与动态类型")]),t._v(" "),s("ul",[s("li",[t._v("静态类型：在变量声明时就能确定类型，且在声明过后类型不允许修改")]),t._v(" "),s("li",[t._v("动态类型：在运行时才能确定变量类型，且变量类型可随时发生变化")])]),t._v(" "),s("p",[t._v("从类型安全来讲，可将类型分为 "),s("code",[t._v("强类型")]),t._v(" 和 "),s("code",[t._v("弱类型")]),t._v("。区别在于是否能够随意进行隐式类型转换\n从类型检查来讲，可将类型分为 "),s("code",[t._v("静态类型")]),t._v(" 和 "),s("code",[t._v("动态类型")]),t._v("。区别在是否可以随时修改变量的类型")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("强类型不等同于静态类型，弱类型也不等同于动态类型")])])])}),[],!1,null,null,null);e.default=_.exports}}]);