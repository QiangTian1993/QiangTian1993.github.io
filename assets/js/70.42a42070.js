(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{533:function(t,v,_){"use strict";_.r(v);var r=_(1),a=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"v8-引擎"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎"}},[t._v("#")]),t._v(" V8 引擎")]),t._v(" "),_("p",[t._v("在 V8 引擎中垃圾回收分为两部分，新生代和老生代")]),t._v(" "),_("h2",{attrs:{id:"新生代"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#新生代"}},[t._v("#")]),t._v(" 新生代")]),t._v(" "),_("p",[t._v("新生代指的是存活时间短的对象，比如函数中的对象。\n在新生代中主要采用复制算法和标记整理算法")]),t._v(" "),_("blockquote",[_("p",[t._v("新生代的内存一般都比较小 64 位系统 32M , 32 位系统中 16M")])]),t._v(" "),_("ul",[_("li",[t._v("\b 新生代内存区分为两个等大的空间")]),t._v(" "),_("li",[t._v("使用时的空间叫 from，空闲的空间叫 to")]),t._v(" "),_("li",[t._v("活动对象存储在 from 中")]),t._v(" "),_("li",[t._v("将活动对象进行标记整理拷贝到 to")]),t._v(" "),_("li",[t._v("将 to 与 from 空间进行互换，并释放 from 空间 内存")])]),t._v(" "),_("h2",{attrs:{id:"老生代"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#老生代"}},[t._v("#")]),t._v(" 老生代")]),t._v(" "),_("p",[t._v("老生代指的是全局对象活动时间长，可使用的内存空间较大")]),t._v(" "),_("blockquote",[_("p",[t._v("64 位系统 1.4G， 32 位系统 700M")])]),t._v(" "),_("ul",[_("li",[t._v("老生代主要采用标记清除法")]),t._v(" "),_("li",[t._v("当新生代对象要移动到全局时会执行标记整理算法")]),t._v(" "),_("li",[t._v("老生代垃圾回收采用的是标记整理算法(标记对象是分为多个时间段进行标记的，执行一段代码然后停下来进行标记如此循环，最后完成清除)")])])])}),[],!1,null,null,null);v.default=a.exports}}]);